{"version":3,"sources":["filters.js"],"names":["Filters","clamp","val","min","max","stringToCoords","vertsString","centers","coordStrings","split","coordsSoFar","i","length","coords","x","parseInt","y","isNaN","push","fillFilter","image","color","width","height","brushFilter","radius","Gui","alertOnce","softBrushFilter","alpha_at_center","customFilter","value"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGA,OAAO,IAAI,EAAzB,C,CAEA;AACA;AACA;AAEA;;AACA,SAASC,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B;;;;;;;;;AASA,SAASF,GAAG,GAAGC,GAAP,GAAcA,GAAd,GAAsBD,GAAG,GAAGE,GAAP,GAAcA,GAAd,GAAoBF,GAAjD;AACD,C,CAED;;;AACA,SAASG,cAAT,CAAyBC,WAAzB,EAAuC;AACrC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,YAAY,GAAGF,WAAW,CAACG,KAAZ,CAAkB,GAAlB,CAAnB;AACA,MAAIC,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,QAAIE,MAAM,GAAGL,YAAY,CAACG,CAAD,CAAZ,CAAgBF,KAAhB,CAAsB,GAAtB,CAAb;AACA,QAAIK,CAAC,GAAGC,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,CAAhB;AACA,QAAIG,CAAC,GAAGD,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,CAAhB;;AACA,QAAI,CAACI,KAAK,CAACH,CAAD,CAAN,IAAa,CAACG,KAAK,CAACD,CAAD,CAAvB,EAA4B;AAC1BT,MAAAA,OAAO,CAACW,IAAR,CAAa;AAACJ,QAAAA,CAAC,EAAEA,CAAJ;AAAOE,QAAAA,CAAC,EAAEA;AAAV,OAAb;AACD;AACF;;AAED,SAAOT,OAAP;AACD,C,CAED;AACA;AACA;AAEA;;;AACAP,OAAO,CAACmB,UAAR,GAAqB,UAAUC,KAAV,EAAiBC,KAAjB,EAAyB;AAC5C,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,KAAK,CAACE,KAA1B,EAAiCR,CAAC,EAAlC,EAAsC;AACpC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,KAAK,CAACG,MAA1B,EAAkCP,CAAC,EAAnC,EAAuC,CACrC;AACA;AACD;AACF;;AACD,SAAOI,KAAP;AACD,CARD,C,CAUA;;;AACApB,OAAO,CAACwB,WAAR,GAAsB,UAAUJ,KAAV,EAAiBK,MAAjB,EAAyBJ,KAAzB,EAAgCf,WAAhC,EAA8C;AAClE;AACA,MAAIC,OAAO,GAAGF,cAAc,CAACC,WAAD,CAA5B,CAFkE,CAIlE;AACA;AACA;AACA;AACA;;AACAoB,EAAAA,GAAG,CAACC,SAAJ,CAAe,oCAAf;AAEA,SAAOP,KAAP;AACD,CAZD;AAcA;;;;;;AAIApB,OAAO,CAAC4B,eAAR,GAA0B,UAAUR,KAAV,EAAiBK,MAAjB,EAAyBJ,KAAzB,EAAgCQ,eAAhC,EAAiDvB,WAAjD,EAA+D;AACvF;AACA,MAAIC,OAAO,GAAGF,cAAc,CAACC,WAAD,CAA5B,CAFuF,CAIvF;AACA;AACA;AACA;AACA;AACA;;AACAoB,EAAAA,GAAG,CAACC,SAAJ,CAAe,wCAAf;AAEA,SAAOP,KAAP;AACD,CAbD;;AAeApB,OAAO,CAAC8B,YAAR,GAAuB,UAAUV,KAAV,EAAiBW,KAAjB,EAAyB;AAC9C;AACA;AACA;AACA;AACAL,EAAAA,GAAG,CAACC,SAAJ,CAAe,qCAAf;AACA,SAAOP,KAAP;AACD,CAPD","sourcesContent":["\"use strict\";\n\nvar Filters = Filters || {};\n\n////////////////////////////////////////////////////////////////////////////////\n// General utility functions\n////////////////////////////////////////////////////////////////////////////////\n\n// Constrain val to the range [min, max]\nfunction clamp(val, min, max) {\n  /* Shorthand for:\n   * if (val < min) {\n   *   return min;\n   * } else if (val > max) {\n   *   return max;\n   * } else {\n   *   return val;\n   * }\n   */\n  return ((val < min) ? min : ((val > max) ? max : val));\n}\n\n// extract vertex coordinates from a URL string\nfunction stringToCoords( vertsString ) {\n  var centers = [];\n  var coordStrings = vertsString.split(\"x\");\n  var coordsSoFar = 0;\n  for (var i = 0; i < coordStrings.length; i++) {\n    var coords = coordStrings[i].split(\"y\");\n    var x = parseInt(coords[0]);\n    var y = parseInt(coords[1]);\n    if (!isNaN(x) && !isNaN(y)) {\n      centers.push({x: x, y: y})\n    }\n  }\n\n  return centers;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Filters\n////////////////////////////////////////////////////////////////////////////////\n\n// Fill the entire image with color\nFilters.fillFilter = function( image, color ) {\n  for (var x = 0; x < image.width; x++) {\n    for (var y = 0; y < image.height; y++) {\n      // uncomment this line to enable this function\n      // image.setPixel(x, y, color);\n    }\n  }\n  return image;\n};\n\n// At each center, draw a solid circle with the specified radius and color\nFilters.brushFilter = function( image, radius, color, vertsString ) {\n  // centers is an array of (x, y) coordinates that each defines a circle center\n  var centers = stringToCoords(vertsString);\n\n  // draw a filled circle centered at every location in centers[].\n  // radius and color are specified in function arguments.\n  // ----------- STUDENT CODE BEGIN ------------\n  // ----------- Our reference solution uses 10 lines of code.\n  // ----------- STUDENT CODE END ------------\n  Gui.alertOnce ('brushFilter is not implemented yet');\n\n  return image;\n};\n\n/*\n * At each center, draw a soft circle with the specified radius and color.\n * Pixel opacity should linearly decrease with the radius from alpha_at_center to 0.\n */\nFilters.softBrushFilter = function( image, radius, color, alpha_at_center, vertsString ) {\n  // centers is an array of (x, y) coordinates that each defines a circle center\n  var centers = stringToCoords(vertsString);\n\n  // draw a filled circle with opacity equals to alpha_at_center at the center of each circle\n  // the opacity decreases linearly along the radius and becomes zero at the edge of the circle\n  // radius and color are specified in function arguments.\n  // ----------- STUDENT CODE BEGIN ------------\n  // ----------- Our reference solution uses 21 lines of code.\n  // ----------- STUDENT CODE END ------------\n  Gui.alertOnce ('softBrushFilter is not implemented yet');\n\n  return image;\n};\n\nFilters.customFilter = function( image, value ) {\n  // You can use this filter to do whatever you want\n  // ----------- STUDENT CODE BEGIN ------------\n  // ----------- Our reference solution uses 0 lines of code.\n  // ----------- STUDENT CODE END ------------\n  Gui.alertOnce ('customFilter is not implemented yet');\n  return image;\n};\n"],"file":"filters.dev.js"}